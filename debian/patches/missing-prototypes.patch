Description: Add missing function prototypes.
 Several function calls are done without having the prototype of the
 function known.  This patch fixes several of these issues.
Author: Petter Reinholdtsen <pere@debian.org>
Last-Update: 2014-05-28
Forwarded: no

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- libmpeg3-1.8.orig/mpeg3cat.c
+++ libmpeg3-1.8/mpeg3cat.c
@@ -4,6 +4,7 @@
 
 #include "libmpeg3.h"
 #include "mpeg3protos.h"
+#include "mpeg3css.h"
 
 #include <errno.h>
 #include <stdio.h>
--- libmpeg3-1.8.orig/mpeg3protos.h
+++ libmpeg3-1.8/mpeg3protos.h
@@ -23,7 +23,7 @@ double mpeg3_divide_double_gcc(double x,
 int64_t mpeg3_total_bytes_gcc(mpeg3_title_t *title);
 int64_t mpeg3io_path_total_bytes(char *path);
 int64_t mpeg3io_get_total_bytes(mpeg3_fs_t *fs);
-
+int mpeg3_copy_fs(mpeg3_fs_t *dst, mpeg3_fs_t *src);
 
 
 
@@ -39,6 +39,8 @@ void mpeg3_new_cell(mpeg3_title_t *title
 /* Called by mpeg3_open for a single file */
 int mpeg3demux_create_title(mpeg3_demuxer_t *demuxer, 
 		FILE *toc);
+int mpeg3_delete_title(mpeg3_title_t *title);
+int mpeg3_create_title(mpeg3_demuxer_t *demuxer, FILE *toc);
 
 
 /* ATRACK */
@@ -94,7 +96,7 @@ void mpeg3_pop_subtitle(mpeg3_strack_t *
 void mpeg3_pop_all_subtitles(mpeg3_strack_t *strack);
 /* Remove all subtitles from all buffers */
 void mpeg3_reset_subtitles(mpeg3_t *file);
-
+int mpeg3_subtitle_tracks(mpeg3_t *file);
 
 
 
@@ -303,6 +305,10 @@ int mpeg3io_close_file(mpeg3_fs_t *fs);
 int mpeg3io_seek(mpeg3_fs_t *fs, int64_t byte);
 int mpeg3io_seek_relative(mpeg3_fs_t *fs, int64_t bytes);
 int mpeg3io_read_data(unsigned char *buffer, int64_t bytes, mpeg3_fs_t *fs);
+void mpeg3io_complete_path(char *complete_path, char *path);
+void mpeg3io_get_directory(char *directory, char *path);
+void mpeg3io_get_filename(char *filename, char *path);
+void mpeg3io_joinpath(char *title_path, char *directory, char *new_filename);
 
 
 
@@ -472,6 +478,12 @@ int mpeg3bits_open_title(mpeg3_bits_t* s
 int64_t mpeg3bits_tell(mpeg3_bits_t* stream);
 /* Reset bit bucket */
 void mpeg3bits_reset(mpeg3_bits_t *stream);
+int mpeg3bits_refill(mpeg3_bits_t* stream);
+int mpeg3bits_use_ptr(mpeg3_bits_t* stream, unsigned char *buffer);
+int mpeg3bits_getbitoffset(mpeg3_bits_t *stream);
+int mpeg3bits_byte_align(mpeg3_bits_t *stream);
+void mpeg3bits_start_forward(mpeg3_bits_t* stream);
+void mpeg3bits_start_reverse(mpeg3_bits_t* stream);
 
 
 
@@ -892,5 +904,6 @@ static unsigned int mpeg3slice_showbits(
 
 
 
+int mpeg3_read_ifo(mpeg3_t *file, int read_cells);
 
 #endif
--- libmpeg3-1.8.orig/mpeg3io.c
+++ libmpeg3-1.8/mpeg3io.c
@@ -1,5 +1,6 @@
 #include "mpeg3private.h"
 #include "mpeg3protos.h"
+#include "mpeg3css.h"
 
 #include <mntent.h>
 #include <stdint.h>
--- libmpeg3-1.8.orig/libmpeg3.c
+++ libmpeg3-1.8/libmpeg3.c
@@ -1,6 +1,8 @@
 #include "libmpeg3.h"
 #include "mpeg3private.h"
 #include "mpeg3protos.h"
+#include "audio/mpeg3audio.h"
+#include "video/mpeg3videoprotos.h"
 
 #include <errno.h>
 #include <fcntl.h>
--- libmpeg3-1.8.orig/mpeg3css.h
+++ libmpeg3-1.8/mpeg3css.h
@@ -3,5 +3,10 @@
 
 
 #include "mpeg3private.inc"
+#include "mpeg3private.h"
+
+int mpeg3_decrypt_packet(mpeg3_css_t *css, unsigned char *sector, int offset);
+int mpeg3_delete_css(mpeg3_css_t *css);
+int mpeg3_get_keys(mpeg3_css_t *css, char *path);
 
 #endif
--- libmpeg3-1.8.orig/audio/layer2.c
+++ libmpeg3-1.8/audio/layer2.c
@@ -7,6 +7,7 @@
 #include "mpeg3private.h"
 #include "mpeg3protos.h"
 #include "tables.h"
+#include "mpeg3audio.h"
 
 static struct al_table alloc_0[] = {
 	{4,0},{5,3},{3,-3},{4,-7},{5,-15},{6,-31},{7,-63},{8,-127},{9,-255},{10,-511},
--- libmpeg3-1.8.orig/audio/mpeg3audio.h
+++ libmpeg3-1.8/audio/mpeg3audio.h
@@ -1,4 +1,9 @@
 #ifndef MPEG3AUDIO_H
 #define MPEG3AUDIO_H
 
+int mpeg3audio_synth_stereo(mpeg3_layer_t *audio, float *bandPtr, int channel, float *out, int *pnt);
+int mpeg3audio_doac3(mpeg3_ac3_t *audio, char *frame, int frame_size, float **output, int render);
+int mpeg3audio_read_raw(mpeg3audio_t *audio, unsigned char *output, 
+			long *size, long max_size);
+
 #endif
--- libmpeg3-1.8.orig/video/seek.c
+++ libmpeg3-1.8/video/seek.c
@@ -1,6 +1,7 @@
 #include "../mpeg3private.h"
 #include "../mpeg3protos.h"
 #include "mpeg3video.h"
+#include "mpeg3videoprotos.h"
 #include <stdlib.h>
 #include <string.h>
 
--- libmpeg3-1.8.orig/video/headers.c
+++ libmpeg3-1.8/video/headers.c
@@ -2,6 +2,7 @@
 #include "../mpeg3private.h"
 #include "../mpeg3protos.h"
 #include "mpeg3video.h"
+#include "mpeg3videoprotos.h"
 
 #include <stdio.h>
 #include <stdlib.h>
--- libmpeg3-1.8.orig/video/slice.c
+++ libmpeg3-1.8/video/slice.c
@@ -1,5 +1,6 @@
 #include "mpeg3private.h"
 #include "mpeg3protos.h"
+#include "mpeg3videoprotos.h"
 
 #include <pthread.h>
 #include <stdlib.h>
--- libmpeg3-1.8.orig/video/mpeg3videoprotos.h
+++ libmpeg3-1.8/video/mpeg3videoprotos.h
@@ -3,5 +3,32 @@
 
 void mpeg3video_idct_conversion(short* block);
 unsigned int mpeg3slice_showbits(mpeg3_slice_buffer_t *slice_buffer, int bits);
+int mpeg3video_get_header(mpeg3video_t *video, int dont_repeat);
+unsigned int mpeg3bits_next_startcode(mpeg3_bits_t* stream);
+void mpeg3video_calc_dmv(mpeg3video_t *video, int DMV[][2], int *dmvector, 
+		int mvx, int mvy);
+
+void mpeg3video_motion_vector(mpeg3_slice_t *slice, mpeg3video_t *video, 
+			      int *PMV, int *dmvector, 
+			      int h_r_size, int v_r_size,
+			      int dmv, int mvscale, 
+			      int full_pel_vector);
+int mpeg3video_motion_vectors(mpeg3_slice_t *slice, mpeg3video_t *video, 
+			      int PMV[2][2][2], int dmvector[2], 
+			      int mv_field_sel[2][2], int s, 
+			      int mv_count, int mv_format, 
+			      int h_r_size, int v_r_size, 
+			      int dmv, int mvscale);
+int mpeg3video_getslicehdr(mpeg3_slice_t *slice, mpeg3video_t *video);
+int mpeg3video_get_macroblocks(mpeg3video_t *video, int framenum);
+int mpeg3video_get_macroblock_address(mpeg3_slice_t *slice);
+int mpeg3video_read_raw(mpeg3video_t *video,  unsigned char *output, 
+			long *size, long max_size);
+int mpeg3video_read_frame_backend(mpeg3video_t *video, int skip_bframes);
+int mpeg3video_read_yuvframe(mpeg3video_t *video,  char *y_output,
+			     char *u_output, char *v_output,
+			     int in_x, int in_y, int in_w, int in_h);
+int mpeg3video_read_yuvframe_ptr(mpeg3video_t *video, char **y_output,
+				 char **u_output, char **v_output);
 
 #endif
